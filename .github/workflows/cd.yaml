name: CD

on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: --deny warnings
  RUSTDOCFLAGS: --deny warnings

jobs:
  release:
    name: Release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: tracker
            asset_name: tracker-linux-x86_64
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            artifact_name: tracker.exe
            asset_name: tracker-windows-x86_64
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            artifact_name: tracker
            asset_name: tracker-macos-x86_64
            target: x86_64-apple-darwin
          - os: macos-latest
            artifact_name: tracker
            asset_name: tracker-macos-aarch64
            target: aarch64-apple-darwin
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create archive
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a -tzip ${{ matrix.asset_name }}.zip ${{ matrix.artifact_name }}
          else
            tar -czf ${{ matrix.asset_name }}.tar.gz ${{ matrix.artifact_name }}
          fi

      - name: Create release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            target/${{ matrix.target }}/release/${{ matrix.asset_name }}.*